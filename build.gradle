buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

plugins {
    // Provide convenience executables for trying out server and client
    id 'application'
    id 'com.google.protobuf' version '0.8.8'
    id 'java'
    id 'idea' // Generate IntelliJ IDEA's .idea & .iml project files

}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
    }
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'com.betpawa'
version '0.1-SNAPSHOT'

def grpcVersion = '1.19.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.6.1'
def protocVersion = protobufVersion
def hibernateVersion = "5.4.2.Final"

dependencies {
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "javax.annotation:javax.annotation-api:1.2"
    runtime "io.grpc:grpc-netty-shaded:${grpcVersion}"

    compile "mysql:mysql-connector-java:8.0.15"
    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    compile "org.hibernate:hibernate-hikaricp:${hibernateVersion}"
    compile "org.hibernate:hibernate-jcache:${hibernateVersion}"
    compile "org.hibernate:hibernate-ehcache:${hibernateVersion}"
    compile "com.zaxxer:HikariCP:3.3.1"
//    compile "com.google.guava:guava:27.1-jre"

    compile "io.dropwizard.metrics:metrics-core:4.0.5"
    compile "commons-cli:commons-cli:1.4"
    compile "commons-beanutils:commons-beanutils:1.9.3"
    compile "org.apache.commons:commons-configuration2:2.4"

    compile "org.slf4j:slf4j-api:1.7.25"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "ch.qos.logback:logback-core:1.2.3"
    compile "ch.qos.logback.contrib:logback-json-classic:0.1.5"
    compile "ch.qos.logback.contrib:logback-jackson:0.1.5"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.6"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testCompile "junit:junit:4.12"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}"}
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }

    integrationTest {
        java {
            compileClasspath += sourceSets.main.output + configurations.testCompile
            runtimeClasspath += output + compileClasspath + configurations.testRuntime
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
        scopes.TEST.plus += [ configurations.integrationTestCompile ]
    }
}

startScripts.enabled = false

task walletServer(type: CreateStartScripts) {
    mainClassName = 'com.betpawa.wallet.server.WalletServer'
    applicationName = 'wallet-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task walletClient(type: CreateStartScripts) {
    mainClassName = 'com.betpawa.wallet.client.WalletClient'
    applicationName = 'wallet-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}

check.dependsOn integrationTest

applicationDistribution.into('bin') {
    from(walletServer)
    from(walletClient)
    fileMode = 0755
}
